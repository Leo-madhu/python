def read_polynomial():
    n=int(input())
    dict_a={}
    for i in range(n):
        power,coefficient=map(int,input().split())
        dict_a[power]=coefficient
    return dict_a

def get_term(coefficient,power):
    coefficient=abs(coefficient)
    if coefficient==1 and power!=0:
        coefficient=''
    if power>1:
        term="{}x^{}".format(coefficient,power)
    elif power==1:
        term="{}x".format(coefficient)
    elif power==0:
        term="{}".format(coefficient)
    return term

def get_expression(polynomial):
    expression=''
    degree= max(polynomial.keys())
    for power in sorted(polynomial.keys(),reverse=True):
        coefficient=polynomial[power]
        term_1=get_term(coefficient,power)
        if power==degree:
            if coefficient>0:
                expression=term_1
            elif coefficient<0:
                expression='-{}'.format(term_1)
        else:
            if coefficient>0:
                expression="{} + {}".format(expression,term_1)
            elif coefficient<0:
                expression="{} - {}".format(expression,term_1)
    if expression== "":
        expression=0
    return expression
    
def get_coefficient(polynomial,power):
    try:
        return polynomial[power]
    except KeyError:
        return 0
def add(p1,p2):
    result=dict()
    for power in (set(p1.keys())|set(p2.keys())):
        result[power]=get_coefficient(p1,power) + get_coefficient(p2,power)
    return result
    

p1=read_polynomial()
p2=read_polynomial()
result=add(p1,p2)
print(get_expression(result))
